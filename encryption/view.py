import re


class PlayFairView():
    def read_keyword(self) -> str:
        while True:
            print('*'*30)
            print('Please input the keyword used in the cypher table: (press enter to use the alphabet as it is)')
            keyword = input()
            match = re.search(r'[\W, \d]', keyword)
            if match is None:
                return keyword
            else:
                print('Invalid keyword it contains non word characters, spaces or digits.')
                print('Press enter to continue')
                input()

    def show_key_table(self, keytable):
        response = ''
        while response not in ['n', 'y']:
            print('*'*30)
            print('The matrix generated by your keyword is:')
            [print(f'{array}\n') for array in keytable]
            print('Is that right? (y - yes / n - no)')
            response = input().lower()
            response = response[0] if response != '' else response
        return response == 'y'

    def show_result(self, result: str):
        print('*'*30)
        print(f'The result of your action was:\n{result}')

    def encrypt(self):
        while True:
            print('*'*30)
            print('Inform the word or phrase you want to be encrypted:')
            word = input()
            match = re.search(r'[\W, \d]', word)
            if match is None:
                return word
            else:
                print('Invalid word it contains non word characters, spaces or digits.')
                print('Press enter to continue')
                input()

    def decrypt(self):
        while True:
            print('*'*30)
            print('Inform the word or phrase you want to decrypt:')
            word = input()
            match = re.search(r'[\W, \d]', word)
            if match is not None:
                print('Invalid word it contains non word characters, spaces or digits.')
                print('Press enter to continue')
                input()
            elif len(word) % 2 == 0:
                return word
            else:
                print('Invalid cypher it cannot be separeted in dygraphs because its lenght is not odd.')
                print('Press enter to continue')
                input()
